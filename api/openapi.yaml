openapi: 3.0.1
info:
  title: API Player
  description: "This is a sample server Petstore server.  You can find out more about\
    \     Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net,\
    \ #swagger](http://swagger.io/irc/).      For this sample, you can use the api\
    \ key `special-key` to test the authorization     filters."
  termsOfService: http://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
- url: http://localhost:8080/v2
  description: สำหรับ Production server (ไว้ Generate)
- url: http://localhost:61/v2
  description: สำหรับ Dev server (เครื่องตัวเอง Player)
- url: http://128.199.216.219:61/V2/
  description: สำหรับ Test play server
- url: http://128.199.216.219:62/V2/
  description: สำหรับ Test agent server
- url: http://128.199.216.219:63/V2/
  description: สำหรับ Test owner server
tags:
- name: player
- name: agent
- name: owner
paths:
  /player/login:
    post:
      tags:
      - player
      summary: Logs user into the system
      operationId: loginPlayer
      requestBody:
        description: ไว้ Login
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlayerLoginInput'
        required: true
      responses:
        "200":
          description: Login ได้
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              style: simple
              explode: false
              schema:
                type: integer
                format: int32
            X-Expires-After:
              description: date in UTC when token expires
              style: simple
              explode: false
              schema:
                type: string
                format: date-time
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
        "400":
          description: Invalid username/password
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-swagger-router-controller: Player
  /player/logout:
    post:
      tags:
      - player
      summary: Logs out current logged in user session
      operationId: logoutPlayer
      responses:
        default:
          description: successful operation
          content: {}
      security:
      - api_key: []
      x-swagger-router-controller: Player
  /player:
    put:
      tags:
      - player
      summary: Update player detail
      operationId: updatePlayerDetail
      requestBody:
        description: update Player Detail
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlayerPutInput'
        required: true
      responses:
        "400":
          description: Invalid Role api
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: Invalid player not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "405":
          description: Validation exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - api_key: []
      x-swagger-router-controller: Player
    post:
      tags:
      - player
      - agent
      summary: register Player
      operationId: registerPlayer
      requestBody:
        description: register new player witch agent refcode
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlayerModel'
        required: true
      responses:
        "405":
          description: Invalid input
          content: {}
      x-swagger-router-controller: Player
  /player/wallet:
    get:
      tags:
      - player
      - agent
      - owner
      summary: Finds wallet player by token key
      description: Finds wallet player detail by token key.
      operationId: findById
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WalletModel'
                x-content-type: application/json
        "400":
          description: Invalid tag value
          content: {}
      security:
      - api_key: []
      x-swagger-router-controller: Player
  /player/list:
    get:
      tags:
      - agent
      - owner
      summary: List Player
      description: List Player.
      operationId: listPlayer
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PlayerModel'
                x-content-type: application/json
        "400":
          description: Invalid tag value
          content: {}
      security:
      - api_key: []
      x-swagger-router-controller: Agent
  /agent/login:
    post:
      tags:
      - agent
      summary: Logs user into the system
      operationId: loginagent
      requestBody:
        description: ไว้ Login
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlayerLoginInput'
        required: true
      responses:
        "200":
          description: successful operation
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              style: simple
              explode: false
              schema:
                type: integer
                format: int32
            X-Expires-After:
              description: date in UTC when token expires
              style: simple
              explode: false
              schema:
                type: string
                format: date-time
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
        "400":
          description: Invalid username/password
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-swagger-router-controller: Agent
  /agent/logout:
    post:
      tags:
      - agent
      summary: Logs out current logged in user session
      operationId: logoutagent
      responses:
        default:
          description: successful operation
          content: {}
      security:
      - api_key: []
      x-swagger-router-controller: Agent
  /employee:
    put:
      tags:
      - agent
      summary: Update player empoyee
      operationId: updateempoyeeDetail
      requestBody:
        description: Pet object that needs to be added to the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlayerModel'
        required: true
      responses:
        "400":
          description: Invalid ID supplied
          content: {}
        "404":
          description: Pet not found
          content: {}
        "405":
          description: Validation exception
          content: {}
      security:
      - api_key: []
      x-swagger-router-controller: Agent
    post:
      tags:
      - agent
      summary: register empoyee
      operationId: registerempoyee
      requestBody:
        description: Pet object that needs to be added to the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlayerModel'
        required: true
      responses:
        "405":
          description: Invalid input
          content: {}
      x-swagger-router-controller: Agent
  /employee/login:
    post:
      tags:
      - agent
      summary: Logs employee into the system
      operationId: loginemployee
      requestBody:
        description: ไว้ Login
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlayerLoginInput'
        required: true
      responses:
        "200":
          description: successful operation
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              style: simple
              explode: false
              schema:
                type: integer
                format: int32
            X-Expires-After:
              description: date in UTC when token expires
              style: simple
              explode: false
              schema:
                type: string
                format: date-time
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
        "400":
          description: Invalid username/password
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-swagger-router-controller: Agent
  /employee/logout:
    post:
      tags:
      - agent
      summary: Logs out current logged in user session
      operationId: logoutemployee
      responses:
        default:
          description: successful operation
          content: {}
      security:
      - api_key: []
      x-swagger-router-controller: Agent
  /agent/paymentlist:
    post:
      tags:
      - agent
      - owner
      summary: List agent payment request
      operationId: listagentPaymentRequest
      responses:
        "405":
          description: Invalid input
          content: {}
      x-swagger-router-controller: Owner
  /agent/payment:
    put:
      tags:
      - agent
      - owner
      summary: update empoyee
      operationId: agentmpoyee
      requestBody:
        description: Pet object that needs to be added to the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlayerModel'
        required: true
      responses:
        "405":
          description: Invalid input
          content: {}
      x-swagger-router-controller: Agent
    post:
      tags:
      - agent
      - owner
      summary: agent payment request
      operationId: agentPaymentRequest
      requestBody:
        description: Pet object that needs to be added to the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentModel'
        required: true
      security:
      - bearerAuth: []
      responses:
        "405":
          description: Invalid input
          content: {}
      x-swagger-router-controller: Agent
  /agent/payment/{paymentId}:
    post:
      tags:
      - agent
      - owner
      summary: payment detail
      description: Returns a single pet
      operationId: getagentById
      parameters:
      - name: paymentId
        in: path
        description: ID of pet to return
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlayerModel'
        "400":
          description: Invalid ID supplied
          content: {}
        "404":
          description: Pet not found
          content: {}
      x-swagger-router-controller: Owner
  /agent/player/payment:
    get:
      tags:
      - agent
      summary: List agent payment request
      operationId: listplayerPaymentRequestagent
      responses:
        "405":
          description: Invalid input
          content: {}
      x-swagger-router-controller: Agent
    put:
      tags:
      - agent
      summary: update empoyee
      operationId: playerAgentRequestupdate
      requestBody:
        description: Pet object that needs to be added to the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentModel'
        required: true
      responses:
        "405":
          description: Invalid input
          content: {}
      x-swagger-router-controller: Agent
    post:
      tags:
      - agent
      summary: agent payment request
      operationId: playerAgentRequest
      requestBody:
        description: Pet object that needs to be added to the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentModel'
        required: true
      responses:
        "405":
          description: Invalid input
          content: {}
      x-swagger-router-controller: Agent
  /player/payment:
    get:
      tags:
      - player
      - agent
      - owner
      summary: List agent payment request
      operationId: listplayerPaymentRequest
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentModel'
        "400":
          description: Invalid ID supplied
          content: {}
        "404":
          description: Pet not found
          content: {}
      x-swagger-router-controller: Player
    post:
      tags:
      - player
      summary: agent payment request
      operationId: playerPaymentRequest
      requestBody:
        description: Pet object that needs to be added to the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentModel'
        required: true
      responses:
        "200":
          description: successful operation
        "405":
          description: Invalid input
          content: {}
      x-swagger-router-controller: Player
  /player/payment/{paymentId}:
    post:
      tags:
      - agent
      - player
      - owner
      summary: payment player detail
      description: Returns a single pet
      operationId: getplayerById
      parameters:
      - name: paymentId
        in: path
        description: ID of pet to return
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentModel'
        "400":
          description: Invalid ID supplied
          content: {}
        "404":
          description: Pet not found
          content: {}
      security:
      - api_key: []
      x-swagger-router-controller: Agent
  /agent/approveplayerpayment/{playerPaymentId}:
    post:
      tags:
      - agent
      summary: payment player detail
      description: Returns a single pet
      operationId: approveplayerpayment
      parameters:
      - name: playerPaymentId
        in: path
        description: ID of pet to return
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlayerModel'
        "400":
          description: Invalid ID supplied
          content: {}
        "404":
          description: Pet not found
          content: {}
      security:
      - api_key: []
      x-swagger-router-controller: Agent
  /owner/login:
    post:
      tags:
      - owner
      summary: Logs user into the system
      operationId: loginowner
      requestBody:
        description: ไว้ Login
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlayerLoginInput'
        required: true
      responses:
        "200":
          description: successful operation
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              style: simple
              explode: false
              schema:
                type: integer
                format: int32
            X-Expires-After:
              description: date in UTC when token expires
              style: simple
              explode: false
              schema:
                type: string
                format: date-time
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
        "400":
          description: Invalid username/password
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-swagger-router-controller: Owner
  /owner/logout:
    post:
      tags:
      - owner
      summary: Logs out current logged in user session
      operationId: logoutowner
      responses:
        default:
          description: successful operation
          content: {}
      security:
      - api_key: []
      x-swagger-router-controller: Owner
  /owner/approveagentpayment/{AgentPaymentId}:
    post:
      tags:
      - owner
      summary: payment agent detail
      description: Returns a single pet
      operationId: approveagentpayment
      parameters:
      - name: AgentPaymentId
        in: path
        description: ID of pet to return
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlayerModel'
        "400":
          description: Invalid ID supplied
          content: {}
        "404":
          description: Pet not found
          content: {}
      security:
      - api_key: []
      x-swagger-router-controller: Owner
components:
  schemas:
    ErrorResponse:
      type: object
      properties:
        error:
          $ref: '#/components/schemas/ErrorResponse_error'
    PlayerLoginInput:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    PlayerPutInput:
      type: object
      properties:
        username:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        password:
          type: string
        phone:
          type: string
        userStatus:
          type: integer
          description: User Status
          format: int32
    PlayerModel:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        password:
          type: string
        phone:
          type: string
        userStatus:
          type: array
          description: status and history
          items:
            type: object
            additionalProperties: {}
        refCodeAgent:
          type: string
          description: JWT form Agent Detail
      example:
        firstName: firstName
        lastName: lastName
        password: password
        userStatus:
        - key: ""
        - key: ""
        refCodeAgent: refCodeAgent
        phone: phone
        id: 0
        email: email
        username: username
    AgentModel:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        password:
          type: string
        refCodeAgent:
          type: string
        type:
          type: integer
          description: Agent type
          format: int32
    EmployeeModel:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        password:
          type: string
        refCodeAgent:
          type: string
        type:
          type: integer
          description: Employee type
          format: int32
    OwnerModel:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        password:
          type: string
        type:
          type: integer
          description: Owner type
          format: int32
    ManagerModel:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        password:
          type: string
        type:
          type: integer
          description: Manager type
          format: int32
    WalletModel:
      type: object
      properties:
        userid:
          type: integer
          format: int64
        coinList:
          type: array
          description: เหรียญรอง (JSON)
          items:
            type: object
            additionalProperties: {}
        amountCoin:
          type: number
          description: เหรียญหลัก
      description: จาก Mongo
      example:
        amountCoin: 6.02745618307040320615897144307382404804229736328125
        coinList:
        - key: ""
        - key: ""
        userid: 0
    PaymentModel:
      type: object
      properties:
        id:
          type: integer
          format: int64
        agentId:
          type: integer
          format: int64
        amount:
          type: number
        type:
          type: string
        status:
          type: string
      example:
        id: 0
        agentId: 6
        amount: 1.46581298050294517310021547018550336360931396484375
        type: "0"
        status: "0"
    TransferModel:
      type: object
      properties:
        id:
          type: integer
          format: int64
        userId:
          type: integer
          format: int64
        from:
          type: integer
          format: int64
        to:
          type: integer
          format: int64
        amount:
          type: number
        status:
          type: integer
          format: int64
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
    inline_response_200:
      type: object
      properties:
        token:
          type: string
      example:
        token: token
    ErrorResponse_error:
      type: object
      properties:
        message:
          type: string
        type:
          type: number
  securitySchemes:
    api_key:
      type: apiKey
      name: api_key
      in: header
    authorization:
      type: http
      scheme: bearer
      bearerFormat: JWT
    bearerAuth:            # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT